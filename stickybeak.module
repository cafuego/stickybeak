<?php
// $Id: stickybeak.module,v 1.2 2009/12/08 05:14:56 cafuego Exp $

/**
 * Provide some stickybeakness into the sessions table. Show us who is online and from where.
 */

/**
 * Implementation of hook_menu()
 */
function stickybeak_menu() {
  $items = array();
  $items['admin/reports/sessions'] = array(
    'title' => 'View session list',
    'description' => 'View a list of sessions',
    'page callback' => 'stickybeak_browse',
    'access arguments' => array('examine sessions'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/reports/sessions/%'] = array(
    'title' => 'View session info',
    'description' => 'View info about a specific session',
    'page callback' => 'stickybeak_details',
    'page arguments' => array(3),
    'access arguments' => array('examine sessions'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implementation of hook_perm()
 */
function stickybeak_perm() {
  return array('examine sessions');
}

/**
 * Pager through sessions 20 at a time.
 */
function stickybeak_browse() {
  $query = "SELECT uid, sid, hostname, timestamp FROM {sessions} ORDER BY timestamp DESC";

  $items_per_page = 20;
  $query = db_rewrite_sql($query);
  $result = pager_query($query, $items_per_page, 0, NULL);

  while ($o = db_fetch_object($result)) {
    $account = user_load($o->uid);
    $tuple = array(
      'user' => theme('username', $account);
      'sid' => l($o->sid, 'admin/reports/sessions/' . $o->sid),
      'hostname' => gethostbyaddr($o->hostname),
      'timestamp' => format_date($o->timestamp, 'custom', 'D j M G:i:s'),
    );
    $data[] = $tuple;
  }

  $headers = array('User', 'Session', 'Hostname', 'Active');
  drupal_set_title('Sessions');

  $output  = theme('table', $headers, $data);
  $output .= theme('pager', array(), $items_per_page);

  return $output;
}

/**
 * Show detailed info about a specific sid.
 */
function stickybeak_details($sid) {

  $output = '';

  $query = "SELECT uid, sid, hostname, timestamp, session FROM {sessions} WHERE sid = '%s'";
  $object = db_fetch_object(db_query($query, $sid));

  if ($object) {
    drupal_set_title('Session ' . $sid);

    $username = theme('username', user_load($object->uid));
    $hostname = gethostbyaddr($object->hostname);
    $timestamp = $object->timestamp;
    $session = stickybeak_unserialize_session($object->session);

    $output = theme('stickybeak_details', $sid, $username, $hostname, $timestamp, $session);
  } else {
    drupal_set_message(t('Session @sid does not exist', array('@sid' => $sid)), 'error');
    $output = t('No data.');
  }

  return $output;
}

/**
 * Helper to unserialuze the session data from the DB.
 * See http://www.php.net/manual/en/function.session-decode.php
 */
function stickybeak_unserialize_session($data) {
  $vars = preg_split(
     '/([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*)\|/',
     $data, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE
   );

   if (empty($vars))
     return NULL;

   for ($i=0; $vars[$i]; $i++) {
       $result[$vars[$i++]] = unserialize($vars[$i]);
   }
   return $result;
}

/**
 * Implementation of hook_theme()
 */
function stickybeak_theme() {
  $path = drupal_get_path('module', 'stickybeak');
  return array(
    'stickybeak_details' => array(
      'arguments' => array('sid' => '', 'username' => variable_get('anonymous', 'Anonymous'), 'hostname' => '', 'timestamp' => 0, 'session' => array()),
      'template' => 'stickybeak-details',
      'path' => "$path/theme",
    ),
    'stickybeak_session' => array(
      'arguments' => array('sid' => '', 'session' => array()),
      'template' => 'stickybeak-session',
      'path' => "$path/theme",
    ),
  );
}
